{"version":3,"sources":["helpers/networkFee.ts","hooks/useBalance.ts","hooks/useNetworkFee.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","hooks/useTxTracker.ts","../node_modules/query-string/index.js","../node_modules/filter-obj/index.js","hooks/useAffiliates.ts","assets/SVG/tx-black.svg","assets/SVG/tx-hidden.svg","assets/SVG/tx-white.svg","components/TxManager/TxManager.style.ts","../node_modules/@ant-design/icons-svg/es/asn/RollbackOutlined.js","../node_modules/@ant-design/icons/es/icons/RollbackOutlined.js","components/TxManager/TxMonitor/TxMonitor.style.ts","components/TxManager/TxMonitor/utils.ts","components/TxManager/TxMonitor/TxMonitor.tsx","components/TxManager/TxManager.tsx","hooks/useTxManager.ts","views/Swap/PanelView/PanelView.style.ts","views/Swap/PanelView/PanelView.tsx","views/Swap/Swap.style.ts","views/Swap/utils.ts","views/Swap/Swap.tsx","hooks/useApprove.ts","helpers/error.ts","views/Swap/index.ts"],"names":["multiplier","average","fast","fastest","getGasRateByChain","inboundData","chain","chainInboundData","find","data","Number","gas_rate","getGasRateByFeeOption","feeOptionType","useBalance","dispatch","useDispatch","useSelector","state","app","wallet","midgard","reloadBalanceByChain","useCallback","walletActions","reloadAllBalance","getMaxBalance","asset","L1Chain","Amount","fromAssetAmount","gasRate","inboundFee","NetworkFee","getNetworkFeeByAsset","direction","balance","getAssetBalance","amount","maxSpendableAmount","isGasAsset","sub","mul","gt","decimal","useNetworkFee","inputAsset","outputAsset","useApp","useMidgard","pools","useMemo","outboundFee","totalFee","outboundFeeInSendAsset","AssetAmount","totalPriceIn","price","eq","add","totalFeeInUSD","Asset","USD","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","useTxTracker","addNewTxTracker","updateTxTracker","clearTxTrackers","processSubmittedTx","submitTransaction","type","submitTx","uuidv4","status","TxTrackerStatus","Submitting","action","refunded","pollTransaction","txTracker","Pending","setTxFailed","Failed","strictUriEncode","require","decodeComponent","splitOnFirst","filterObject","validateArrayFormatSeparator","value","encode","strict","encodeURIComponent","decode","keysSorter","input","Array","isArray","sort","Object","keys","a","b","map","key","removeHash","hashStart","indexOf","slice","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","result","accumulator","exec","replace","concat","includes","isEncodedArray","newValue","split","item","parserForArrayFormat","ret","create","param","k","reduce","Boolean","exports","object","shouldFilter","skipNull","skipEmptyString","index","join","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","module","obj","predicate","isArr","val","useAffiliates","useLocation","search","refs","JSON","ADDRESS","e","_extends","target","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","id","className","d","SvgTxBlack","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","SvgTxHidden","SvgTxWhite","Container","styled","div","StyledButton","CoreButton","Content","Button","palette","EmptyContent","ClearRow","RollbackOutlined","React","AntdIcon","icon","RollbackOutlinedSvg","displayName","collapsed","Header","HeaderRight","HeaderBtn","color","ProgressIconWrapper","TxInformation","border","ExternalLinkWrapper","ExternalButtonLink","TxTitle","Label","isSwapType","TxTrackerType","Swap","Mint","Redeem","getSwapInTxUrl","txID","inAssets","fromAssetString","multichain","getExplorerTxUrl","getApproveTxUrl","getSwapOutTxUrl","out","outTx","coins","getSwapOutTxData","setDecimal","fromMidgard","ActionTypeEnum","toSignificant","name","Refund","getAddTxUrl","in","inTx","inData","addTx","isRUNE","runeTxID","assetTxID","getWithdrawSubmitTxUrl","withdrawChain","getWithdrawTxUrl","ProgressIcon","CheckCircleOutlined","LoadingOutlined","CloseCircleOutlined","TxMonitor","useState","setCollapsed","outTxData","setOutTxData","useEffect","getSwapTxData","txOutData","Success","toggle","Approve","approveAsset","ticker","outAssets","sendAsset","sendAmount","receiveAsset","receiveAmount","sendAssetName","receiveAssetName","info","AddLiquidity","poolAsset","sendAsset1","sendAmount1","sendAsset2","sendAmount2","Withdraw","withdrawAsset1","withdrawAmount1","withdrawAsset2","withdrawAmount2","Switch","getTxTitle","totalProgressStatus","getTotalProgressStatus","txColor","getTxColor","renderTxContent","sendTitle","isSynth","getSwapSendTitle","receiveTitle","getSwapReceiveTitle","link","assetObj","onClick","TxManager","themeType","pollTx","pollUpgradeTx","pollApprove","txTrackers","txCollapsed","setTxCollapsed","pendingTransactions","tracker","useInterval","forEach","useTxManager","toggleTx","hasTxHistory","renderAllTxTrackers","handleClearHistory","round","ThemeType","DARK","Panel","ContentPanel","media","sm","HeaderContent","HeaderMenu","PanelView","selected","meta","children","refreshPage","useGlobalState","isRefreshVisible","useMedia","Helmet","content","Refresh","onRefresh","SettingsOverlay","ToolContainer","SwitchPair","ConfirmButtonContainer","ConfirmModalContent","RecipientAddrWrapper","SwapInfo","ApproveBtn","FancyButton","getSwapPair","pair","output","decodeFromURL","getSwapTrackerType","swap","synthType","SynthType","MINT","REDEEM","FromCard","ToCard","StyledSliderWrapper","SwapPage","history","useHistory","allPools","poolLoading","slippageTolerance","affiliates","haltedChains","useMimir","useWallet","isWalletLoading","setIsConnectModalOpen","isConnected","hasConnectedWallet","handleClickWalletBtn","filteredAffiliates","affiliate","validateAddress","address","hasWallet","approveStatus","isApproved","setApproved","isWalletConnected","isAssetApproved","approved","checkApproved","assetApproveStatus","useApprove","isTradingHalted","inTradeInboundData","outTradeInboundData","inTradeMimirStatus","outTradeMimirStatus","halted","walletConnected","hasWalletConnected","inputAssets","detail","poolAssets","assets","pool","RUNE","synthAssets","synthAsset","symbol","outputAssets","IS_SYNTH_ACTIVE","inputAmount","setInputAmount","percent","setPercent","chainRecipient","setChainRecipient","recipient","setRecipient","visibleConfirmModal","setVisibleConfirmModal","visibleApproveModal","setVisibleApproveModal","affiliateFee","isLTC","isBTC","AmountType","ASSET_AMOUNT","AFFILIATE_FEE","totalFeePlusAffiliate","isValidAddress","inputAssetAmount","inboundFeeInInputAsset","outboundFeeInOutputAsset","slip","fee","error","console","log","outputAmount","outputAmountAfterFee","slipPercent","Percent","minReceive","minOutputAmount","inputAssetPriceInUSD","Price","baseAsset","priceAmount","outputAssetPriceInUSD","getWalletAddressByChain","maxInputBalance","inputAssetBalance","handleSelectInputAsset","getSwapRoute","handleSelectOutputAsset","handleSwitchPair","handleChangeInputAmount","assetAmount","toNumber","handleChangePercent","p","newAmount","handleSelectMax","handleConfirm","trackerType","trackId","txHash","msg","description","Notification","message","duration","handleCancel","handleConfirmApprove","handleSwap","hasInSufficientFee","handleApprove","isValidSwap","IS_TESTNET","valid","isValid","isValidSlip","isSlipValid","btnLabel","renderConfirmModalContent","toUpperCase","truncateAddress","toFixed","tooltip","SLIP_TOOLTIP_LABEL","MIN_RECEIVED_LABEL","toCurrencyFormat","TX_FEE_TOOLTIP_LABEL","renderApproveModal","onChange","onSelect","onMax","usdPrice","withLabel","inputProps","disabled","chainAddr","onAddressChange","loading","visible","onOk","onCancel","SwapView","getAffiliates","filteredAddresses","affiliateAddress","setAffiliates","useParams","swapPair","setSwapPair","swapPairData","getPair"],"mappings":"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","file":"static/js/3.d9f8646d.chunk.js","sourcesContent":["import { FeeOptionKey } from '@xchainjs/xchain-client'\nimport { Chain } from '@xchainjs/xchain-util'\nimport { InboundAddressesItem } from 'midgard-sdk'\n\nconst multiplier: Record<FeeOptionKey, number> = {\n  average: 0.67,\n  fast: 1,\n  fastest: 1.5,\n}\n\n// Reference issue: https://github.com/thorchain/asgardex-electron/issues/1381\nexport const getGasRateByChain = ({\n  inboundData,\n  chain,\n}: {\n  inboundData: InboundAddressesItem[]\n  chain: Chain\n}): number => {\n  const chainInboundData = inboundData.find((data) => data.chain === chain)\n\n  return Number(chainInboundData?.gas_rate ?? 0)\n}\n\nexport const getGasRateByFeeOption = ({\n  inboundData,\n  chain,\n  feeOptionType,\n}: {\n  inboundData: InboundAddressesItem[]\n  chain: Chain\n  feeOptionType: FeeOptionKey\n}) => {\n  return getGasRateByChain({ inboundData, chain }) * multiplier[feeOptionType]\n}\n","import { useCallback } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Asset, Amount, getAssetBalance, NetworkFee } from 'multichain-sdk'\n\nimport { SupportedChain } from 'multichain-sdk/clients/types'\n\nimport { RootState } from 'redux/store'\nimport * as walletActions from 'redux/wallet/actions'\n\nimport { getGasRateByFeeOption } from 'helpers/networkFee'\n\nexport const useBalance = () => {\n  const dispatch = useDispatch()\n  const { feeOptionType } = useSelector((state: RootState) => state.app)\n  const { wallet } = useSelector((state: RootState) => state.wallet)\n  const { inboundData } = useSelector((state: RootState) => state.midgard)\n\n  const reloadBalanceByChain = useCallback(\n    (chain: SupportedChain) => {\n      dispatch(walletActions.getWalletByChain(chain))\n    },\n    [dispatch],\n  )\n\n  const reloadAllBalance = useCallback(() => {\n    dispatch(walletActions.loadAllWallets())\n  }, [dispatch])\n\n  const getMaxBalance = useCallback(\n    (asset: Asset): Amount => {\n      if (!wallet?.[asset.L1Chain as SupportedChain]) {\n        // allow max amount for emulation if wallet is not connected\n        return Amount.fromAssetAmount(0, 8)\n      }\n\n      // calculate inbound fee\n      const gasRate = getGasRateByFeeOption({\n        inboundData,\n        chain: asset.L1Chain,\n        feeOptionType,\n      })\n      const inboundFee = NetworkFee.getNetworkFeeByAsset({\n        asset,\n        gasRate,\n        direction: 'inbound',\n      })\n\n      const balance = getAssetBalance(asset, wallet).amount\n\n      /**\n       * if asset is used for gas, subtract the inbound gas fee from input amount\n       * else allow full amount\n       * Calc: max spendable amount = balance amount - 2 x gas fee(if send asset equals to gas asset)\n       */\n\n      const maxSpendableAmount = asset.isGasAsset()\n        ? balance.sub(inboundFee.mul(1.5).amount)\n        : balance\n\n      if (maxSpendableAmount.gt(0)) {\n        return maxSpendableAmount\n      }\n\n      return Amount.fromAssetAmount(0, asset.decimal)\n    },\n    [wallet, feeOptionType, inboundData],\n  )\n\n  return {\n    getMaxBalance,\n    reloadAllBalance,\n    reloadBalanceByChain,\n    wallet,\n  }\n}\n","import { useMemo } from 'react'\n\nimport { Asset, Amount, AssetAmount, NetworkFee, Pool } from 'multichain-sdk'\n\nimport { useApp } from 'redux/app/hooks'\nimport { useMidgard } from 'redux/midgard/hooks'\n\nimport { getGasRateByChain, getGasRateByFeeOption } from 'helpers/networkFee'\n\nexport const useNetworkFee = ({\n  inputAsset,\n  outputAsset,\n}: {\n  inputAsset: Asset\n  outputAsset?: Asset\n}) => {\n  const { feeOptionType } = useApp()\n  const { inboundData, pools } = useMidgard()\n\n  const inboundFee = useMemo(() => {\n    // get inbound gasRate with fee option\n\n    const gasRate = getGasRateByFeeOption({\n      inboundData,\n      chain: inputAsset.L1Chain,\n      feeOptionType,\n    })\n    const networkFee = NetworkFee.getNetworkFeeByAsset({\n      asset: inputAsset,\n      gasRate,\n      direction: 'inbound',\n    })\n\n    return networkFee\n  }, [inputAsset, inboundData, feeOptionType])\n\n  const outboundFee = useMemo(() => {\n    if (!outputAsset) return null\n\n    const gasRate = getGasRateByChain({\n      inboundData,\n      chain: outputAsset.L1Chain,\n    })\n    const networkFee = NetworkFee.getNetworkFeeByAsset({\n      asset: outputAsset,\n      gasRate,\n      direction: 'outbound',\n    })\n\n    return networkFee\n  }, [outputAsset, inboundData])\n\n  const totalFee = useMemo(() => {\n    if (!outboundFee) return inboundFee\n\n    const outboundFeeInSendAsset = new AssetAmount(\n      inputAsset,\n      Amount.fromAssetAmount(\n        outboundFee.totalPriceIn(inputAsset, pools).price,\n        inputAsset.decimal,\n      ),\n    )\n\n    if (inboundFee.asset.eq(inputAsset)) {\n      return inboundFee.add(outboundFeeInSendAsset)\n    }\n\n    const inboundFeeInSendAsset = new AssetAmount(\n      inputAsset,\n      Amount.fromAssetAmount(\n        inboundFee.totalPriceIn(inputAsset, pools).price,\n        inputAsset.decimal,\n      ),\n    )\n    return inboundFeeInSendAsset.add(outboundFeeInSendAsset)\n  }, [inputAsset, inboundFee, outboundFee, pools])\n\n  const totalFeeInUSD = useMemo(\n    () => totalFee.totalPriceIn(Asset.USD(), pools),\n    [totalFee, pools],\n  )\n\n  return {\n    totalFee,\n    inboundFee,\n    outboundFee,\n    totalFeeInUSD,\n  }\n}\n\nexport const getSumAmountInUSD = (\n  assetAmount1: AssetAmount | null,\n  assetAmount2: AssetAmount | null,\n  pools: Pool[],\n) => {\n  const assetAmount1InUSD = assetAmount1?.totalPriceIn(Asset.USD(), pools)\n  const assetAmount2InUSD = assetAmount2?.totalPriceIn(Asset.USD(), pools)\n\n  if (assetAmount1 === null && assetAmount2InUSD)\n    return assetAmount2InUSD.toCurrencyFormat()\n  if (assetAmount2 === null && assetAmount1InUSD)\n    return assetAmount1InUSD.toCurrencyFormat()\n\n  if (assetAmount1InUSD && assetAmount2InUSD) {\n    const sum = assetAmount1InUSD.raw().plus(assetAmount2InUSD.raw())\n\n    return Amount.fromAssetAmount(sum, 8).toFixed(2)\n  }\n\n  return Amount.fromAssetAmount(0, 8).toFixed()\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useCallback } from 'react'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { useMidgard } from 'redux/midgard/hooks'\nimport { TxTrackerStatus, SubmitTx, TxTrackerType } from 'redux/midgard/types'\n\n/**\n * 1. send transaction and get txHash\n * 2. poll midgard action API and get \"in\" tx with the same txHash\n * 3. check action status (success, pending)\n * 4. check action type and match with send tx type\n *    (if action type is not \"refund\", action type should be matched to the send type)\n */\n\nexport const useTxTracker = () => {\n  const {\n    addNewTxTracker,\n    updateTxTracker,\n    clearTxTrackers,\n    processSubmittedTx,\n  } = useMidgard()\n\n  // confirm and submit a transaction\n  const submitTransaction = useCallback(\n    ({\n      type,\n      submitTx,\n    }: {\n      type: TxTrackerType\n      submitTx: SubmitTx\n    }): string => {\n      const uuid = uuidv4()\n\n      addNewTxTracker({\n        uuid,\n        type,\n        status: TxTrackerStatus.Submitting,\n        submitTx,\n        action: null,\n        refunded: null,\n      })\n\n      return uuid\n    },\n    [addNewTxTracker],\n  )\n\n  // start polling a transaction\n  const pollTransaction = useCallback(\n    ({\n      uuid,\n      submitTx,\n      type,\n    }: {\n      uuid: string\n      submitTx: SubmitTx\n      type: TxTrackerType\n    }) => {\n      updateTxTracker({\n        uuid,\n        txTracker: {\n          status: TxTrackerStatus.Pending,\n          submitTx,\n        },\n      })\n      processSubmittedTx({ submitTx, type })\n    },\n    [updateTxTracker, processSubmittedTx],\n  )\n\n  // start polling a transaction\n  const setTxFailed = useCallback(\n    (uuid: string) => {\n      updateTxTracker({\n        uuid,\n        txTracker: {\n          status: TxTrackerStatus.Failed,\n        },\n      })\n    },\n    [updateTxTracker],\n  )\n\n  return {\n    submitTransaction,\n    pollTransaction,\n    clearTxTrackers,\n    setTxFailed,\n  }\n}\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import { useLocation } from 'react-router-dom'\n\nimport { decode } from 'jwt-simple'\nimport queryString from 'query-string'\n\nimport { ADDRESS } from 'multichain-sdk/config'\n\nconst useAffiliates = (): string[] | null => {\n  const query = queryString.parse(useLocation().search)\n  if (query.refs) {\n    try {\n      return JSON.parse(decode(query.refs as string, ADDRESS as string))\n    } catch (e) {\n      return null\n    }\n  }\n  return null\n}\n\nexport default useAffiliates\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#231f20;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M40.29,0A40.29,40.29,0,1,0,80.57,40.29,40.29,40.29,0,0,0,40.29,0Zm0,73.65A33.37,33.37,0,1,1,73.65,40.29,33.37,33.37,0,0,1,40.29,73.65Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M32.92,52.54a7.66,7.66,0,0,1-3.94-1,7.27,7.27,0,0,1-2.66-2.68,7.41,7.41,0,0,1-1-3.74V32.94H18.71V28H37.85v4.9H31.24v12.7a1.93,1.93,0,0,0,.58,1.4,1.83,1.83,0,0,0,1.38.6h1.92v4.9Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M39.88,52.54,46.29,42a9.3,9.3,0,0,1-2.94-1.87,8.19,8.19,0,0,1-1.91-2.82,9.7,9.7,0,0,1-.68-3.71V28h5.88V34a3.91,3.91,0,0,0,.37,1.7,3.23,3.23,0,0,0,1.05,1.29,3.42,3.42,0,0,0,1.59.65L55.32,28h6.54l-6.4,10.32a9.29,9.29,0,0,1,3.36,1.75A7.84,7.84,0,0,1,61,43a9.44,9.44,0,0,1,.77,3.91v5.6H55.91V46.66a3.85,3.85,0,0,0-1-2.68,3.53,3.53,0,0,0-2.73-1.14l-5.77,9.7Z\"\n})));\n\nfunction SvgTxBlack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 80.57 80.57\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTxBlack);\nexport default __webpack_public_path__ + \"static/media/tx-black.a6c035f9.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#6d6e71;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M40.29,0A40.29,40.29,0,1,0,80.57,40.29,40.29,40.29,0,0,0,40.29,0Zm0,73.65A33.37,33.37,0,1,1,73.65,40.29,33.37,33.37,0,0,1,40.29,73.65Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M32.92,52.54a7.66,7.66,0,0,1-3.94-1,7.27,7.27,0,0,1-2.66-2.68,7.41,7.41,0,0,1-1-3.74V32.94H18.71V28H37.85v4.9H31.24v12.7a1.93,1.93,0,0,0,.58,1.4,1.83,1.83,0,0,0,1.38.6h1.92v4.9Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M39.88,52.54,46.29,42a9.3,9.3,0,0,1-2.94-1.87,8.19,8.19,0,0,1-1.91-2.82,9.7,9.7,0,0,1-.68-3.71V28h5.88V34a3.91,3.91,0,0,0,.37,1.7,3.23,3.23,0,0,0,1.05,1.29,3.42,3.42,0,0,0,1.59.65L55.32,28h6.54l-6.4,10.32a9.29,9.29,0,0,1,3.36,1.75A7.84,7.84,0,0,1,61,43a9.44,9.44,0,0,1,.77,3.91v5.6H55.91V46.66a3.85,3.85,0,0,0-1-2.68,3.53,3.53,0,0,0-2.73-1.14l-5.77,9.7Z\"\n})));\n\nfunction SvgTxHidden(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 80.57 80.57\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTxHidden);\nexport default __webpack_public_path__ + \"static/media/tx-hidden.a6499207.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#fff;}\"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_2\",\n  \"data-name\": \"Layer 2\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\",\n  \"data-name\": \"Layer 1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M40.29,0A40.29,40.29,0,1,0,80.57,40.29,40.29,40.29,0,0,0,40.29,0Zm0,73.65A33.37,33.37,0,1,1,73.65,40.29,33.37,33.37,0,0,1,40.29,73.65Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M32.92,52.54a7.66,7.66,0,0,1-3.94-1,7.27,7.27,0,0,1-2.66-2.68,7.41,7.41,0,0,1-1-3.74V32.94H18.71V28H37.85v4.9H31.24v12.7a1.93,1.93,0,0,0,.58,1.4,1.83,1.83,0,0,0,1.38.6h1.92v4.9Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M39.88,52.54,46.29,42a9.3,9.3,0,0,1-2.94-1.87,8.19,8.19,0,0,1-1.91-2.82,9.7,9.7,0,0,1-.68-3.71V28h5.88V34a3.91,3.91,0,0,0,.37,1.7,3.23,3.23,0,0,0,1.05,1.29,3.42,3.42,0,0,0,1.59.65L55.32,28h6.54l-6.4,10.32a9.29,9.29,0,0,1,3.36,1.75A7.84,7.84,0,0,1,61,43a9.44,9.44,0,0,1,.77,3.91v5.6H55.91V46.66a3.85,3.85,0,0,0-1-2.68,3.53,3.53,0,0,0-2.73-1.14l-5.77,9.7Z\"\n})));\n\nfunction SvgTxWhite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 80.57 80.57\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTxWhite);\nexport default __webpack_public_path__ + \"static/media/tx-white.a7a28278.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro'\nimport { palette } from 'styled-theme'\n\nimport { Button, CoreButton } from '../UIElements'\n\nexport const Container = styled.div<{ collapsed: boolean }>`\n  background: transparent;\n  //margin-left: min(1vw, 15px);\n  //margin-right: min(1vw, 15px);\n  margin-bottom: 0px;\n  justify-content: left;\n`\nexport const StyledButton = styled(CoreButton)`\n  min-width: 30px !important;\n  padding: 0;\n  margin-left: 0;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    stroke: none;\n    /* fill: ${palette('text', 0)}; */\n    /* outline: none;\n    fill: ${palette('background', 1)}; */\n  }\n`\nexport const Options = styled(Button)`\n  width: 1px;\n  padding: 0;\n  margin-top: 1px;\n  text-align: left;\n  border: white;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  width: 56px;\n  height: 32px;\n\n  button {\n    padding-top: 2px;\n\n    width: 100%;\n    height: 100%;\n  }\n\n  z-index: 200;\n`\n\nexport const Content = styled.div`\n  display: flex;\n  background: ${palette('background', 1)};\n  flex-direction: column;\n\n  position: absolute;\n  left: 20px;\n  top: 90px;\n`\n\nexport const EmptyContent = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  position: absolute;\n  left: 20px;\n  top: 90px;\n\n  padding: 4px 8px;\n\n  border: 1px solid ${palette('gray', 0)};\n  border-radius: 4px;\n`\n\nexport const ClearRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${palette('background', 8)};\n\n  height: 30px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`\n","// This icon file is generated automatically.\nvar RollbackOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M793 242H366v-74c0-6.7-7.7-10.4-12.9-6.3l-142 112a8 8 0 000 12.6l142 112c5.2 4.1 12.9.4 12.9-6.3v-74h415v470H175c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h618c35.3 0 64-28.7 64-64V306c0-35.3-28.7-64-64-64z\" } }] }, \"name\": \"rollback\", \"theme\": \"outlined\" };\nexport default RollbackOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RollbackOutlinedSvg from \"@ant-design/icons-svg/es/asn/RollbackOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RollbackOutlined = function RollbackOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: RollbackOutlinedSvg\n  }));\n};\n\nRollbackOutlined.displayName = 'RollbackOutlined';\nexport default /*#__PURE__*/React.forwardRef(RollbackOutlined);","import styled from 'styled-components/macro'\nimport { palette } from 'styled-theme'\n\nimport { ExternalButtonLink } from '../../Link'\nimport { CoreButton, Label } from '../../UIElements'\n\nexport const Container = styled.div<{ collapsed: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  border: 1px solid ${palette('gray', 0)};\n  background: ${palette('background', 1)};\n\n  height: ${(props) => (props.collapsed ? '42px' : 'auto')};\n\n  overflow: hidden;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 4px 4px 4px 8px;\n`\n\nexport const HeaderRight = styled.div`\n  display: flex;\n  align-items: center;\n\n  button {\n  }\n`\n\nexport const HeaderBtn = styled(CoreButton)<{\n  color: 'primary' | 'success' | 'warning' | 'error'\n}>`\n  margin-left: 0;\n\n  svg {\n    stroke: ${(props) => palette(props.color, 0)};\n  }\n`\n\nexport const TxMonitor = styled.div<{ collapsed: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  height: ${(props) => (props.collapsed ? '50px' : 'auto')};\n`\n\nexport const ProgressIconWrapper = styled.div<{\n  color: 'primary' | 'success' | 'warning' | 'error'\n}>`\n  padding: 2px;\n  margin-right: 6px;\n\n  svg {\n    color: ${(props) => palette(props.color, 0)};\n  }\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  border-top: 1px solid ${palette('gray', 0)};\n  background: ${palette('background', 3)};\n\n  padding: 4px 4px;\n`\n\nexport const TxInformation = styled.div<{ border?: boolean }>`\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n  padding: 4px;\n\n  border-top: 1px solid ${palette('gray', 0)};\n  border-top-width: ${(props) => (props.border ? '1px' : '0px')};\n`\n\nexport const ExternalLinkWrapper = styled(ExternalButtonLink)<{\n  color: 'primary' | 'success' | 'warning' | 'error'\n}>`\n  margin-left: auto;\n  margin-right: 4px;\n  svg {\n    width: 16px;\n    height: 16px;\n    stroke: ${(props) => palette(props.color, 0)};\n  }\n`\n\nexport const TxTitle = styled(Label)`\n  flex: 1;\n`\n","import { ActionTypeEnum, Transaction } from 'midgard-sdk'\nimport { Asset, Amount } from 'multichain-sdk'\n\nimport { TxTracker, TxTrackerStatus, TxTrackerType } from 'redux/midgard/types'\n\nimport { multichain } from 'services/multichain'\n\nimport { ProgressStatus } from './types'\n\nexport const isSwapType = (txTracker: TxTracker): boolean => {\n  if (\n    txTracker.type === TxTrackerType.Swap ||\n    txTracker.type === TxTrackerType.Mint ||\n    txTracker.type === TxTrackerType.Redeem\n  ) {\n    return true\n  }\n\n  return false\n}\n\nexport const getSwapSendTitle = ({\n  sendAsset,\n  receiveAsset,\n}: {\n  sendAsset: string\n  receiveAsset: string\n}) => {\n  if (\n    Asset.fromAssetString(sendAsset)?.isSynth &&\n    Asset.fromAssetString(receiveAsset)?.isSynth === false\n  )\n    return 'Burn'\n  return 'Send'\n}\n\nexport const getSwapReceiveTitle = ({\n  sendAsset,\n  receiveAsset,\n}: {\n  sendAsset: string\n  receiveAsset: string\n}) => {\n  if (\n    Asset.fromAssetString(sendAsset)?.isSynth === false &&\n    Asset.fromAssetString(receiveAsset)?.isSynth\n  )\n    return 'Mint'\n  return 'Receive'\n}\n\nexport const getTxTitle = (txTracker: TxTracker): string => {\n  const { type, submitTx } = txTracker\n\n  if (type === TxTrackerType.Approve) {\n    const { inAssets = [] } = submitTx\n    const { asset: approveAsset } = inAssets[0]\n\n    const info = `Approve ${Asset.fromAssetString(approveAsset)?.ticker}`\n\n    return info\n  }\n\n  if (isSwapType(txTracker)) {\n    const { inAssets = [], outAssets = [] } = submitTx\n    const { asset: sendAsset, amount: sendAmount } = inAssets[0]\n    const { asset: receiveAsset, amount: receiveAmount } = outAssets[0]\n\n    const sendAssetName = Asset.fromAssetString(sendAsset)?.name\n    const receiveAssetName = Asset.fromAssetString(receiveAsset)?.name\n    let info = ''\n\n    if (txTracker.type === TxTrackerType.Swap) {\n      info = `Swap ${sendAmount} ${sendAssetName} for ${receiveAmount} ${receiveAssetName}`\n    } else if (txTracker.type === TxTrackerType.Mint) {\n      info = `Mint ${receiveAmount} ${receiveAssetName} from ${sendAmount} ${sendAssetName}`\n    } else if (txTracker.type === TxTrackerType.Redeem) {\n      info = `Redeem ${sendAmount} ${sendAssetName} for ${receiveAmount} ${receiveAssetName}`\n    }\n\n    return info\n  }\n\n  if (type === TxTrackerType.AddLiquidity) {\n    const { inAssets = [], poolAsset = '' } = submitTx\n\n    // sym add liquidity\n    if (inAssets.length === 2) {\n      const { asset: sendAsset1, amount: sendAmount1 } = inAssets[0]\n      const { asset: sendAsset2, amount: sendAmount2 } = inAssets[1]\n\n      const info = `Add ${sendAmount1} ${\n        Asset.fromAssetString(sendAsset1)?.ticker\n      }, ${sendAmount2} ${\n        Asset.fromAssetString(sendAsset2)?.ticker\n      } to ${poolAsset} Pool`\n\n      return info\n    }\n\n    // asym add\n    if (inAssets.length === 1) {\n      const { asset: sendAsset1, amount: sendAmount1 } = inAssets[0]\n\n      const info = `Add ${sendAmount1} ${\n        Asset.fromAssetString(sendAsset1)?.ticker\n      } to ${poolAsset} Pool`\n\n      return info\n    }\n  }\n\n  if (type === TxTrackerType.Withdraw) {\n    const { outAssets = [] } = submitTx\n\n    // sym withdraw\n    if (outAssets.length === 2) {\n      const { asset: withdrawAsset1, amount: withdrawAmount1 } = outAssets[0]\n      const { asset: withdrawAsset2, amount: withdrawAmount2 } = outAssets[1]\n\n      const info = `Withdraw ${withdrawAmount1} ${\n        Asset.fromAssetString(withdrawAsset1)?.ticker\n      }, ${withdrawAmount2} ${Asset.fromAssetString(withdrawAsset2)?.ticker}`\n\n      return info\n    }\n\n    // asym withdraw\n    if (outAssets.length === 1) {\n      const { asset: withdrawAsset1, amount: withdrawAmount1 } = outAssets[0]\n\n      const info = `Withdraw ${withdrawAmount1} ${\n        Asset.fromAssetString(withdrawAsset1)?.ticker\n      }`\n\n      return info\n    }\n  }\n\n  if (type === TxTrackerType.Switch) {\n    const { inAssets = [] } = submitTx\n    const { asset: sendAsset, amount: sendAmount } = inAssets[0]\n\n    const info = `Upgrade ${sendAmount} ${\n      Asset.fromAssetString(sendAsset)?.chain\n    } ${Asset.fromAssetString(sendAsset)?.ticker} for Native RUNE`\n\n    return info\n  }\n\n  return 'Transaction'\n}\n\nexport const getTotalProgressStatus = (\n  txTracker: TxTracker,\n): ProgressStatus => {\n  if (txTracker.status === TxTrackerStatus.Failed) return 'failed'\n\n  if (txTracker.status === TxTrackerStatus.Success) {\n    if (txTracker.refunded) {\n      return 'refunded'\n    }\n\n    return 'success'\n  }\n\n  return 'pending'\n}\n\nexport const getTxColor = (txTracker: TxTracker) => {\n  if (txTracker.status === TxTrackerStatus.Failed) return 'error'\n\n  if (txTracker.status === TxTrackerStatus.Success) {\n    if (txTracker.refunded) {\n      return 'warning'\n    }\n\n    return 'success'\n  }\n\n  return 'primary'\n}\n\nexport const getSwapInTxUrl = (txTracker: TxTracker): string => {\n  const { submitTx } = txTracker\n\n  if (submitTx?.txID) {\n    const { inAssets = [], txID } = submitTx\n    const asset = Asset.fromAssetString(inAssets[0].asset)\n\n    if (asset) {\n      return multichain.getExplorerTxUrl(asset.chain, txID)\n    }\n  }\n\n  return '#'\n}\n\nexport const getApproveTxUrl = (txTracker: TxTracker): string => {\n  const { submitTx } = txTracker\n\n  if (submitTx?.txID) {\n    const { inAssets = [], txID } = submitTx\n    const asset = Asset.fromAssetString(inAssets[0].asset)\n\n    if (asset) {\n      return multichain.getExplorerTxUrl(asset.chain, txID)\n    }\n  }\n\n  return '#'\n}\n\nexport const getSwapOutTxUrl = (txTracker: TxTracker): string => {\n  const { action } = txTracker\n\n  if (action?.out) {\n    const outTx = action.out[0]\n    const asset = Asset.fromAssetString(outTx?.coins?.[0]?.asset)\n\n    if (asset) {\n      // add 0x for eth tx\n      if (asset.chain === 'ETH') {\n        return multichain.getExplorerTxUrl(asset.chain, `0x${outTx?.txID}`)\n      }\n      return multichain.getExplorerTxUrl(asset.chain, outTx?.txID)\n    }\n  }\n\n  return '#'\n}\n\n/**\n * @param txTracker tx tracking data\n * @returns exact received swap data based on the midgard action\n */\nexport const getSwapOutTxData = async (\n  txTracker: TxTracker,\n): Promise<string | null> => {\n  const { action } = txTracker\n\n  if (action?.out) {\n    const outTx = action.out[0]\n    const asset = Asset.fromAssetString(outTx?.coins?.[0]?.asset)\n\n    if (asset) {\n      await asset?.setDecimal()\n\n      const amount = Amount.fromMidgard(outTx?.coins?.[0]?.amount)\n\n      if (action.type === ActionTypeEnum.Swap) {\n        if (txTracker.type === TxTrackerType.Swap) {\n          return `Received ${amount.toSignificant(6)} ${asset.name}`\n        }\n\n        if (txTracker.type === TxTrackerType.Mint) {\n          return `Minted ${amount.toSignificant(6)} ${asset.name}`\n        }\n\n        if (txTracker.type === TxTrackerType.Redeem) {\n          return `Redeemed ${amount.toSignificant(6)} ${asset.name}`\n        }\n      }\n\n      if (action.type === ActionTypeEnum.Refund) {\n        return `Refunded ${amount.toSignificant(6)} ${asset.name}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport const getAddTxUrl = ({\n  asset,\n  txTracker,\n}: {\n  asset: Asset\n  txTracker: TxTracker\n}): string => {\n  const { action, submitTx } = txTracker\n\n  if (action?.in) {\n    const inTx = action.in.find(\n      (inData: Transaction) => inData.coins?.[0].asset === asset?.toString(),\n    )\n\n    if (inTx) {\n      // add 0x for eth tx\n      if (asset.chain === 'ETH') {\n        return multichain.getExplorerTxUrl(asset.chain, `0x${inTx?.txID}`)\n      }\n\n      return multichain.getExplorerTxUrl(asset.chain, inTx?.txID)\n    }\n  } else if (submitTx.addTx) {\n    const { addTx } = submitTx\n\n    if (asset.isRUNE() && addTx.runeTxID) {\n      return multichain.getExplorerTxUrl(asset.chain, addTx.runeTxID)\n    }\n\n    if (addTx.assetTxID) {\n      return multichain.getExplorerTxUrl(asset.chain, addTx.assetTxID)\n    }\n  }\n\n  return '#'\n}\n\nexport const getWithdrawSubmitTxUrl = (txTracker: TxTracker): string => {\n  const { submitTx } = txTracker\n\n  if (submitTx?.txID && submitTx?.withdrawChain) {\n    const { withdrawChain, txID } = submitTx\n\n    return multichain.getExplorerTxUrl(withdrawChain, txID)\n  }\n\n  return '#'\n}\n\nexport const getWithdrawTxUrl = ({\n  asset,\n  txTracker,\n}: {\n  asset: Asset\n  txTracker: TxTracker\n}): string => {\n  const { action } = txTracker\n\n  if (action?.out) {\n    const outTx = action.out.find(\n      (data: Transaction) => data.coins?.[0].asset === asset?.toString(),\n    )\n\n    if (outTx) {\n      // add 0x for eth tx\n      if (asset.chain === 'ETH') {\n        return multichain.getExplorerTxUrl(asset.chain, `0x${outTx?.txID}`)\n      }\n      return multichain.getExplorerTxUrl(asset.chain, outTx?.txID)\n    }\n  }\n\n  return '#'\n}\n","import React, { useMemo } from 'react'\n\nimport { ChevronUp, ChevronDown, ExternalLink } from 'react-feather'\n\nimport {\n  CheckCircleOutlined,\n  LoadingOutlined,\n  RollbackOutlined,\n  CloseCircleOutlined,\n} from '@ant-design/icons'\nimport { Asset } from 'multichain-sdk'\n\nimport { TxTracker, TxTrackerStatus, TxTrackerType } from 'redux/midgard/types'\n\nimport { Label } from '../../UIElements'\nimport * as Styled from './TxMonitor.style'\nimport { ProgressStatus } from './types'\nimport {\n  getApproveTxUrl,\n  getSwapInTxUrl,\n  getSwapOutTxUrl,\n  getSwapOutTxData,\n  getTxTitle,\n  getTotalProgressStatus,\n  getTxColor,\n  getAddTxUrl,\n  getWithdrawTxUrl,\n  getWithdrawSubmitTxUrl,\n  isSwapType,\n  getSwapSendTitle,\n  getSwapReceiveTitle,\n} from './utils'\n\nconst ProgressIcon = ({ status }: { status: ProgressStatus }) => {\n  if (status === 'refunded') {\n    return (\n      <Styled.ProgressIconWrapper color=\"warning\">\n        <RollbackOutlined />\n      </Styled.ProgressIconWrapper>\n    )\n  }\n  if (status === 'success') {\n    return (\n      <Styled.ProgressIconWrapper color=\"success\">\n        <CheckCircleOutlined />\n      </Styled.ProgressIconWrapper>\n    )\n  }\n\n  if (status === 'pending') {\n    return (\n      <Styled.ProgressIconWrapper color=\"primary\">\n        <LoadingOutlined />\n      </Styled.ProgressIconWrapper>\n    )\n  }\n\n  return (\n    <Styled.ProgressIconWrapper color=\"error\">\n      <CloseCircleOutlined />\n    </Styled.ProgressIconWrapper>\n  )\n}\n\nexport const TxMonitor = ({ txTracker }: { txTracker: TxTracker }) => {\n  const [collapsed, setCollapsed] = React.useState(true)\n  const [outTxData, setOutTxData] = React.useState<string>('')\n\n  React.useEffect(() => {\n    const getSwapTxData = async () => {\n      const txOutData = await getSwapOutTxData(txTracker)\n\n      if (txOutData) {\n        setOutTxData(txOutData)\n      }\n    }\n\n    if (txTracker.status === TxTrackerStatus.Success) {\n      if (txTracker.type === TxTrackerType.Swap) {\n        getSwapTxData()\n      }\n    }\n  }, [txTracker])\n\n  const toggle = React.useCallback(() => {\n    setCollapsed(!collapsed)\n  }, [collapsed])\n\n  const title = useMemo(() => getTxTitle(txTracker), [txTracker])\n\n  const totalProgressStatus: ProgressStatus = useMemo(\n    () => getTotalProgressStatus(txTracker),\n    [txTracker],\n  )\n\n  const txColor = useMemo(() => getTxColor(txTracker), [txTracker])\n\n  const renderTxContent = useMemo(() => {\n    const { type, status, submitTx } = txTracker\n\n    if (isSwapType(txTracker)) {\n      const { inAssets = [], outAssets = [] } = submitTx\n      const { asset: sendAsset, amount: sendAmount } = inAssets[0]\n      const { asset: receiveAsset, amount: receiveAmount } = outAssets[0]\n\n      const sendTitle = getSwapSendTitle({\n        sendAsset,\n        receiveAsset,\n      })\n\n      const receiveTitle = getSwapReceiveTitle({\n        sendAsset,\n        receiveAsset,\n      })\n\n      if (status === TxTrackerStatus.Failed) {\n        return (\n          <Styled.TxInformation>\n            <ProgressIcon status=\"failed\" />\n            <Label color=\"error\">\n              {sendTitle} {sendAmount} {Asset.fromAssetString(sendAsset)?.name}{' '}\n              Failed\n            </Label>\n          </Styled.TxInformation>\n        )\n      }\n\n      return (\n        <>\n          <Styled.TxInformation>\n            <ProgressIcon\n              status={\n                status === TxTrackerStatus.Submitting ? 'pending' : 'success'\n              }\n            />\n            <Label color=\"primary\">\n              {sendTitle} {sendAmount} {Asset.fromAssetString(sendAsset)?.name}\n            </Label>\n            {status !== TxTrackerStatus.Submitting && (\n              <Styled.ExternalLinkWrapper\n                link={getSwapInTxUrl(txTracker)}\n                color=\"primary\"\n              >\n                <ExternalLink />\n              </Styled.ExternalLinkWrapper>\n            )}\n          </Styled.TxInformation>\n          {status !== TxTrackerStatus.Submitting && (\n            <Styled.TxInformation border>\n              <ProgressIcon\n                status={\n                  status === TxTrackerStatus.Success ? 'success' : 'pending'\n                }\n              />\n              <Label color=\"primary\">\n                {status === TxTrackerStatus.Pending &&\n                  `${receiveTitle} ${receiveAmount} ${\n                    Asset.fromAssetString(receiveAsset)?.name\n                  }`}\n                {status === TxTrackerStatus.Success && outTxData\n                  ? outTxData\n                  : ''}\n              </Label>\n              {status === TxTrackerStatus.Success && (\n                <Styled.ExternalLinkWrapper\n                  link={getSwapOutTxUrl(txTracker)}\n                  color=\"primary\"\n                >\n                  <ExternalLink />\n                </Styled.ExternalLinkWrapper>\n              )}\n            </Styled.TxInformation>\n          )}\n        </>\n      )\n    }\n\n    if (type === TxTrackerType.AddLiquidity) {\n      const { inAssets = [] } = submitTx\n\n      return (\n        <>\n          {txTracker.refunded && (\n            <Styled.TxInformation key=\"refunded\">\n              <ProgressIcon status=\"refunded\" />\n              <Label color=\"warning\">Refunded</Label>\n            </Styled.TxInformation>\n          )}\n          {!txTracker.refunded &&\n            inAssets.map(({ asset, amount }) => {\n              const assetObj = Asset.fromAssetString(asset)\n              if (!assetObj) return null\n\n              return (\n                <Styled.TxInformation key={asset}>\n                  <ProgressIcon\n                    status={\n                      status !== TxTrackerStatus.Success ? 'pending' : 'success'\n                    }\n                  />\n                  <Label color=\"primary\">\n                    {status !== TxTrackerStatus.Success\n                      ? `Add ${amount} ${assetObj?.ticker}`\n                      : `Added ${amount} ${assetObj?.ticker}`}\n                  </Label>\n                  {status !== TxTrackerStatus.Submitting && (\n                    <Styled.ExternalLinkWrapper\n                      link={getAddTxUrl({ asset: assetObj, txTracker })}\n                      color=\"primary\"\n                    >\n                      <ExternalLink />\n                    </Styled.ExternalLinkWrapper>\n                  )}\n                </Styled.TxInformation>\n              )\n            })}\n        </>\n      )\n    }\n\n    if (type === TxTrackerType.Withdraw) {\n      const { outAssets = [] } = submitTx\n\n      return (\n        <>\n          <Styled.TxInformation>\n            <ProgressIcon\n              status={\n                status === TxTrackerStatus.Submitting ? 'pending' : 'success'\n              }\n            />\n            <Label color=\"primary\">Submit Withdraw TX</Label>\n            {status !== TxTrackerStatus.Submitting && (\n              <Styled.ExternalLinkWrapper\n                link={getWithdrawSubmitTxUrl(txTracker)}\n                color=\"primary\"\n              >\n                <ExternalLink />\n              </Styled.ExternalLinkWrapper>\n            )}\n          </Styled.TxInformation>\n          {txTracker.refunded && (\n            <Styled.TxInformation key=\"refunded\">\n              <ProgressIcon status=\"refunded\" />\n              <Label color=\"warning\">Refunded</Label>\n            </Styled.TxInformation>\n          )}\n          {!txTracker.refunded &&\n            status !== TxTrackerStatus.Submitting &&\n            outAssets.map(({ asset, amount }) => {\n              const assetObj = Asset.fromAssetString(asset)\n              if (!assetObj) return null\n\n              return (\n                <Styled.TxInformation key={asset}>\n                  <ProgressIcon\n                    status={\n                      status !== TxTrackerStatus.Success ? 'pending' : 'success'\n                    }\n                  />\n                  <Label color=\"primary\">\n                    {status !== TxTrackerStatus.Success\n                      ? `Withdraw ${amount} ${assetObj?.ticker}`\n                      : `Withdraw ${amount} ${assetObj?.ticker} Finished`}\n                  </Label>\n                  {status === TxTrackerStatus.Success && (\n                    <Styled.ExternalLinkWrapper\n                      link={getWithdrawTxUrl({ asset: assetObj, txTracker })}\n                      color=\"primary\"\n                    >\n                      <ExternalLink />\n                    </Styled.ExternalLinkWrapper>\n                  )}\n                </Styled.TxInformation>\n              )\n            })}\n        </>\n      )\n    }\n\n    if (type === TxTrackerType.Switch) {\n      const { inAssets = [], outAssets = [] } = submitTx\n      const { asset: sendAsset, amount: sendAmount } = inAssets[0]\n      const { amount: receiveAmount } = outAssets[0]\n\n      return (\n        <>\n          <Styled.TxInformation>\n            <ProgressIcon\n              status={\n                status === TxTrackerStatus.Submitting ? 'pending' : 'success'\n              }\n            />\n            <Label color=\"primary\">\n              Send {sendAmount} {Asset.fromAssetString(sendAsset)?.chain}{' '}\n              {Asset.fromAssetString(sendAsset)?.ticker}\n            </Label>\n            {status !== TxTrackerStatus.Submitting && (\n              <Styled.ExternalLinkWrapper\n                link={getSwapInTxUrl(txTracker)}\n                color=\"primary\"\n              >\n                <ExternalLink />\n              </Styled.ExternalLinkWrapper>\n            )}\n          </Styled.TxInformation>\n          {status !== TxTrackerStatus.Submitting && (\n            <Styled.TxInformation border>\n              <ProgressIcon\n                status={\n                  status !== TxTrackerStatus.Success ? 'pending' : 'success'\n                }\n              />\n              <Label color=\"primary\">\n                {status === TxTrackerStatus.Pending &&\n                  `Receive ${receiveAmount} Native RUNE`}\n                {status === TxTrackerStatus.Success &&\n                  `Received ${receiveAmount} Native RUNE`}\n              </Label>\n              {status === TxTrackerStatus.Success && (\n                <Styled.ExternalLinkWrapper\n                  link={getSwapOutTxUrl(txTracker)}\n                  color=\"primary\"\n                >\n                  <ExternalLink />\n                </Styled.ExternalLinkWrapper>\n              )}\n            </Styled.TxInformation>\n          )}\n        </>\n      )\n    }\n\n    if (type === TxTrackerType.Approve) {\n      const { inAssets = [] } = submitTx\n      const { asset: approveAsset } = inAssets[0]\n\n      if (status === TxTrackerStatus.Failed) {\n        return (\n          <Styled.TxInformation>\n            <ProgressIcon status=\"failed\" />\n            <Label color=\"error\">\n              Approve {Asset.fromAssetString(approveAsset)?.ticker} Failed\n            </Label>\n          </Styled.TxInformation>\n        )\n      }\n\n      return (\n        <>\n          <Styled.TxInformation>\n            <ProgressIcon\n              status={\n                status === TxTrackerStatus.Submitting ? 'pending' : 'success'\n              }\n            />\n            <Label color=\"primary\">\n              {status === TxTrackerStatus.Pending &&\n                `Approve ${Asset.fromAssetString(approveAsset)?.ticker}`}\n              {status === TxTrackerStatus.Success &&\n                `Approved ${Asset.fromAssetString(approveAsset)?.ticker}`}\n            </Label>\n            {status !== TxTrackerStatus.Submitting && (\n              <Styled.ExternalLinkWrapper\n                link={getApproveTxUrl(txTracker)}\n                color=\"primary\"\n              >\n                <ExternalLink />\n              </Styled.ExternalLinkWrapper>\n            )}\n          </Styled.TxInformation>\n        </>\n      )\n    }\n\n    return null\n  }, [txTracker, outTxData])\n\n  return (\n    <Styled.Container collapsed={collapsed}>\n      <Styled.Header>\n        <ProgressIcon status={totalProgressStatus} />\n        <Styled.TxTitle color={txColor}>{title}</Styled.TxTitle>\n        <Styled.HeaderRight>\n          <Styled.HeaderBtn onClick={toggle} color={txColor}>\n            {!collapsed ? <ChevronUp /> : <ChevronDown />}\n          </Styled.HeaderBtn>\n        </Styled.HeaderRight>\n      </Styled.Header>\n      <Styled.Content>{renderTxContent}</Styled.Content>\n    </Styled.Container>\n  )\n}\n","import React, { useMemo } from 'react'\n\nimport { ThemeType } from 'theme'\n\nimport { useApp } from 'redux/app/hooks'\nimport { TxTracker } from 'redux/midgard/types'\n\nimport { useTxManager } from 'hooks/useTxManager'\n\nimport { ReactComponent as TxIconDark } from 'assets/SVG/tx-black.svg'\nimport { ReactComponent as TxIconHidden } from 'assets/SVG/tx-hidden.svg'\nimport { ReactComponent as TxIconLight } from 'assets/SVG/tx-white.svg'\n\nimport { Label } from '../UIElements'\nimport * as Styled from './TxManager.style'\nimport { TxMonitor } from './TxMonitor'\n\nexport const TxManager = () => {\n  const { themeType } = useApp()\n  const {\n    txTrackers,\n    txCollapsed,\n    setTxCollapsed,\n    clearTxTrackers,\n  } = useTxManager()\n\n  const toggleTx = React.useCallback(() => {\n    setTxCollapsed(!txCollapsed)\n  }, [setTxCollapsed, txCollapsed])\n  const hasTxHistory = useMemo(() => txTrackers.length > 0, [txTrackers])\n\n  const renderAllTxTrackers = useMemo(\n    () =>\n      txTrackers.map((tracker: TxTracker) => (\n        <TxMonitor key={tracker.uuid} txTracker={tracker} />\n      )),\n    [txTrackers],\n  )\n\n  const handleClearHistory = React.useCallback(() => {\n    clearTxTrackers()\n  }, [clearTxTrackers])\n\n  return (\n    <Styled.Container collapsed={txCollapsed}>\n      <Styled.StyledButton onClick={toggleTx} round>\n        {txCollapsed ? (\n          themeType === ThemeType.DARK ? (\n            <TxIconHidden />\n          ) : (\n            <TxIconHidden />\n          )\n        ) : themeType === ThemeType.DARK ? (\n          <TxIconLight />\n        ) : (\n          <TxIconDark />\n        )}\n      </Styled.StyledButton>\n      {!txCollapsed && (\n        <>\n          {!hasTxHistory && (\n            <Styled.EmptyContent>\n              <Label>No transactions.</Label>\n            </Styled.EmptyContent>\n          )}\n          {hasTxHistory && (\n            <Styled.Content>\n              {renderAllTxTrackers}\n              <Styled.ClearRow onClick={handleClearHistory}>\n                <Label>Clear History</Label>\n              </Styled.ClearRow>\n            </Styled.Content>\n          )}\n        </>\n      )}\n    </Styled.Container>\n  )\n}\n","import { useMemo } from 'react'\n\nimport { useMidgard } from 'redux/midgard/hooks'\nimport { TxTracker, TxTrackerStatus, TxTrackerType } from 'redux/midgard/types'\n\nimport useInterval from 'hooks/useInterval'\n\n/**\n * 1. send transaction and get txHash\n * 2. poll midgard action API and get \"in\" tx with the same txHash\n * 3. check action status (success, pending)\n * 4. check action type and match with send tx type\n *    (if action type is not \"refund\", action type should be matched to the send type)\n */\n\nconst POLL_TX_INTERVAL = 3000 // poll tx from midgard every 3s\n\nexport const useTxManager = () => {\n  const {\n    pollTx,\n    pollUpgradeTx,\n    pollApprove,\n    txTrackers,\n    txCollapsed,\n    setTxCollapsed,\n    clearTxTrackers,\n  } = useMidgard()\n\n  const pendingTransactions = useMemo(() => {\n    return txTrackers.filter((tracker: TxTracker) => {\n      return tracker.status === TxTrackerStatus.Pending\n    })\n  }, [txTrackers])\n\n  useInterval(\n    () => {\n      pendingTransactions.forEach((tracker: TxTracker) => {\n        if (tracker.type === TxTrackerType.Switch) {\n          pollUpgradeTx(tracker)\n        } else if (tracker.type === TxTrackerType.Approve) {\n          pollApprove(tracker)\n        } else {\n          pollTx(tracker)\n        }\n      })\n    },\n    pendingTransactions.length ? POLL_TX_INTERVAL : null,\n  )\n\n  return {\n    txTrackers,\n    txCollapsed,\n    setTxCollapsed,\n    clearTxTrackers,\n  }\n}\n","import { transparentize } from 'polished'\nimport styled from 'styled-components/macro'\nimport { palette } from 'styled-theme'\n\nimport { media } from 'helpers/style'\n\nimport { Panel } from '../../../components/Panel'\n\nexport const Container = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n\n  background: rgb(34 35 37);\n  /* ${({ theme }) => `${transparentize(0.4, theme.palette.background[5])}`}; */\n  width: 90vw;\n  max-width: 500px;\n  margin: auto auto auto auto;\n  //margin-bottom: 2vh;\n  padding-top: 0px;\n  padding-right: auto;\n  padding-left: auto;\n\n  border-radius: 10px;\n  border: none;\n  align-items: center;\n`\n\nexport const ContentPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 96%;\n  align-items: center;\n\n  padding: 16px 8px 16px 8px;\n\n  ${media.sm`\n    padding: 16px 12px 4px 12px;\n  `}\n`\n\nexport const HeaderContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n\n  padding: 0 10px;\n`\n\nexport const HeaderMenu = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const HeaderActions = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const PoolDetailLink = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n  color: ${palette('text', 0)};\n`\n\nexport const MenuIconWrapper = styled.div<{ selected: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n\n  font-weight: ${(props) => (props.selected ? 'bold' : 'normal')};\n\n  svg {\n    color: ${(props) =>\n      props.selected ? palette('primary', 0) : palette('text', 0)};\n  }\n`\n","import React from 'react'\n\n// import { Link } from 'react-router-dom'\n// import { SwapOutlined } from '@ant-design/icons'\nimport { TxManager } from 'components/TxManager'\n\nimport { useGlobalState } from 'redux/hooks'\n\nimport { useMedia } from 'hooks/useMedia'\n\nimport { ContentTitle } from '../../../components'\nimport { Helmet } from '../../../components/Helmet'\nimport { Refresh } from '../../../components/Refresh'\nimport { SettingsOverlay } from '../../../components/SettingsOverlay'\nimport { Asset } from '../../../multichain-sdk'\nimport * as Styled from './PanelView.style'\n\nexport type PanelViewProps = {\n  type: 'swap' | 'pending' | 'savings'\n  meta: string\n  poolAsset: Asset\n  children: React.ReactNode\n}\n\n// const SwapButton = ({ selected }: { selected: boolean }) => (\n//   <CoreButton>\n//     <Tooltip tooltip=\"Swap\" placement=\"top\">\n//       <Styled.MenuIconWrapper selected={selected}>\n//         <SwapOutlined />\n//       </Styled.MenuIconWrapper>\n//     </Tooltip>\n//   </CoreButton>\n// )\n\n// type MenuButtonProps = {\n//   selected: boolean\n//   route: string\n//   children: React.ReactElement\n// }\n\n// const MenuButton: React.FC<MenuButtonProps> = ({\n//   selected,\n//   route,\n//   children,\n// }) => {\n//   if (selected) {\n//     return children\n//   }\n\n//   return <Link to={route}>{children}</Link>\n// }\n\nexport const PanelView = ({\n  // type,\n  meta,\n  // poolAsset,\n  children,\n}: PanelViewProps) => {\n  // const swapRoute = useMemo(() => {\n  //   return getSwapRoute(poolAsset, Asset.RUNE())\n  // }, [poolAsset])\n\n  const { refreshPage } = useGlobalState()\n  // const isGadgetVisible = useMedia('(min-width: 824px)')\n  const isRefreshVisible = useMedia('(min-width: 375px)')\n\n  return (\n    <Styled.Container>\n      <Helmet title={meta} content={meta} />\n      <ContentTitle>\n        <Styled.HeaderContent>\n          <TxManager />\n          <Styled.HeaderMenu>\n            {isRefreshVisible && <Refresh onRefresh={refreshPage} />}\n            {/* <MenuButton selected={type === 'swap'} route={swapRoute}>\n              <SwapButton selected={type === 'swap'} />\n            </MenuButton> */}\n          </Styled.HeaderMenu>\n          <SettingsOverlay />\n        </Styled.HeaderContent>\n      </ContentTitle>\n      <Styled.ContentPanel>{children}</Styled.ContentPanel>\n    </Styled.Container>\n  )\n}\n","import { FancyButton, Panel } from 'components'\n// import { transparentize } from 'polished'\nimport styled from 'styled-components/macro'\nimport { palette } from 'styled-theme'\n\nexport const ToolContainer = styled.div`\n  display: box;\n  margin-top: 13px;\n  margin-bottom: 3px;\n  height: 40px;\n`\n\nexport const WalletSetupLink = styled.a`\n  text-transform: lowercase;\n  color: #71f6ab;\n  margin-top: 1.5vw;\n`\n\nexport const SliderWrapper = styled.div`\n  margin: auto;\n  width: 95%;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const SwitchPair = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n\n  svg {\n    width: 24px;\n    height: 24px;\n    color: ${palette('background', 8)};\n    transform: rotate(90deg);\n  }\n`\n\nexport const ConfirmButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 0 1%;\n\n  margin-top: 5vh;\n  margin-bottom: 2vh;\n\n  button {\n    flex: 1;\n  }\n`\n\nexport const ConfirmModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`\n\nexport const RecipientAddrWrapper = styled.div`\n  margin-top: 14px;\n`\n\nexport const SwapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  padding: 8px;\n  margin-top: 14px;\n\n  border: 1px solid ${palette('gray', 0)};\n  border-radius: 4px;\n`\n\nexport const ApproveBtn = styled(FancyButton)`\n  margin-right: 8px;\n`\nexport const Container = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n\n  background: transparent;\n  width: 90vw;\n  max-width: 500px;\n  margin: auto auto auto auto;\n  //margin-bottom: 2vh;\n  padding-top: 0px;\n  padding-right: auto;\n  padding-left: auto;\n\n  border-radius: 10px;\n  border: none;\n  align-items: center;\n`\nexport const AnimationContainer = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n\n  background: transparent;\n  width: 90vw;\n  max-width: 500px;\n  margin: auto auto auto auto;\n  //margin-bottom: 2vh;\n  padding-top: 0px;\n  padding-right: auto;\n  padding-left: auto;\n\n  border-radius: 10px;\n  border: none;\n  align-items: center;\n  position: fixed;\n  top: 8vh;\n  left: 50%;\n  transform: translateX(-50%);\n`\n","import { Asset, Swap, SynthType } from 'multichain-sdk'\n\nimport { TxTrackerType } from 'redux/midgard/types'\n\nimport { Pair } from './types'\n\nexport const getSwapPair = async (pair: string): Promise<Pair | null> => {\n  if (!pair || pair.split('_').length !== 2) {\n    return null\n  }\n\n  const input = pair.split('_')?.[0]\n  const output = pair.split('_')?.[1]\n\n  if (!input || !output) return null\n\n  const inputAsset = Asset.decodeFromURL(input)\n  const outputAsset = Asset.decodeFromURL(output)\n\n  if (!inputAsset || !outputAsset) return null\n\n  await inputAsset.setDecimal()\n  await outputAsset.setDecimal()\n\n  return {\n    inputAsset,\n    outputAsset,\n  }\n}\n\nexport const getSwapTrackerType = (swap: Swap): TxTrackerType => {\n  if (swap.inputAsset.isSynth || swap.outputAsset.isSynth) {\n    if (swap.synthType === SynthType.MINT) {\n      return TxTrackerType.Mint\n    }\n    if (swap.synthType === SynthType.REDEEM) {\n      return TxTrackerType.Redeem\n    }\n  }\n\n  return TxTrackerType.Swap\n}\n","import React, { useEffect, useMemo, useState, useCallback } from 'react'\n\nimport { useHistory, useParams } from 'react-router'\n\n// import { SwapOutlined } from '@ant-design/icons'\nimport {\n  AddressSelectCard,\n  AssetInputCard,\n  Slider,\n  ConfirmModal,\n  Information,\n  Notification,\n  IconButton,\n  FancyButton,\n} from 'components'\nimport {\n  // getInputAssets,\n  Amount,\n  Asset,\n  AssetAmount,\n  getWalletAddressByChain,\n  Swap,\n  Percent,\n  Price,\n  getAssetBalance,\n  SupportedChain,\n  hasWalletConnected,\n  hasConnectedWallet,\n  AmountType,\n} from 'multichain-sdk'\nimport styled from 'styled-components'\nimport { palette } from 'styled-theme'\n\nimport { AFFILIATE_FEE } from 'multichain-sdk/config'\n\nimport { useApp } from 'redux/app/hooks'\nimport { useMidgard } from 'redux/midgard/hooks'\nimport { TxTrackerStatus, TxTrackerType } from 'redux/midgard/types'\nimport { useWallet } from 'redux/wallet/hooks'\n\nimport useAffiliates from 'hooks/useAffiliates'\nimport { useApprove } from 'hooks/useApprove'\nimport { useBalance } from 'hooks/useBalance'\nimport { useMimir } from 'hooks/useMimir'\nimport { useNetworkFee } from 'hooks/useNetworkFee'\nimport { useTxTracker } from 'hooks/useTxTracker'\n\nimport { multichain } from 'services/multichain'\n\nimport { translateErrorMsg } from 'helpers/error'\nimport { getAffiliates, setAffiliates } from 'helpers/storage'\nimport { truncateAddress } from 'helpers/string'\n\nimport { IS_SYNTH_ACTIVE, IS_TESTNET } from 'settings/config'\nimport { getSwapRoute } from 'settings/constants'\nimport {\n  TX_FEE_TOOLTIP_LABEL,\n  SLIP_TOOLTIP_LABEL,\n  // ESTIMATED_TIME_LABEL,\n  MIN_RECEIVED_LABEL,\n} from 'settings/constants/label'\n\nimport { PanelView } from './PanelView'\nimport * as Styled from './Swap.style'\nimport { Pair } from './types'\nimport { getSwapPair, getSwapTrackerType } from './utils'\n\nconst SwapView = () => {\n  const refs = useAffiliates()\n  useEffect(() => {\n    if (refs && getAffiliates() === null) {\n      const affiliateAddresses: string[] = refs\n      const filteredAddresses = affiliateAddresses.filter((affiliateAddress) =>\n        multichain.validateAddress({\n          chain: 'THOR',\n          address: affiliateAddress,\n        }),\n      )\n      setAffiliates(filteredAddresses)\n    }\n  }, [refs])\n  let { pair } = useParams<{ pair: string }>()\n  const [swapPair, setSwapPair] = useState<Pair>()\n  if (!pair || pair === '') {\n    pair = 'BTC.BTC_THOR.RUNE'\n  }\n  useEffect(() => {\n    const getPair = async () => {\n      const swapPairData = await getSwapPair(pair)\n\n      if (swapPairData) {\n        setSwapPair(swapPairData)\n      }\n    }\n\n    getPair()\n  }, [pair])\n\n  if (swapPair) {\n    const { inputAsset, outputAsset } = swapPair\n    return <SwapPage inputAsset={inputAsset} outputAsset={outputAsset} />\n  }\n\n  return null\n}\nconst FromCard = styled.div`\n  background-image: linear-gradient(\n    120deg,\n    ${palette('background', 6)},\n    #black\n  );\n  border-radius: 4px;\n  height: 145px;\n`\n\nconst ToCard = styled.div`\n  background-image: linear-gradient(\n    120deg,\n    ${palette('background', 6)},\n    #black\n  );\n  border-radius: 4px;\n  height: 145px;\n`\n\nconst StyledSliderWrapper = styled.div`\n  width: 90%;\n  margin: auto;\n`\n\nconst SwapPage = ({ inputAsset, outputAsset }: Pair) => {\n  const history = useHistory()\n  const { wallet, getMaxBalance } = useBalance()\n  const { pools: allPools, poolLoading, inboundData } = useMidgard()\n  const { slippageTolerance, affiliates } = useApp()\n  const { haltedChains } = useMimir()\n  const { isWalletLoading, setIsConnectModalOpen } = useWallet()\n  const isConnected = useMemo(() => hasConnectedWallet(wallet), [wallet])\n\n  const handleClickWalletBtn = useCallback(() => {\n    if (!isConnected && !isWalletLoading) {\n      setIsConnectModalOpen(true)\n    }\n  }, [isConnected, isWalletLoading, setIsConnectModalOpen])\n\n  const filteredAffiliates = useMemo(\n    () =>\n      affiliates?.filter((affiliate) =>\n        multichain.validateAddress({\n          chain: 'THOR',\n          address: affiliate,\n        }),\n      ),\n    [affiliates],\n  )\n  const { submitTransaction, pollTransaction, setTxFailed } = useTxTracker()\n  const { isApproved, assetApproveStatus } = useApprove(inputAsset, !!wallet)\n  const isTradingHalted: boolean = useMemo(() => {\n    const inTradeInboundData = inboundData.find(\n      (data) => data.chain === inputAsset.chain,\n    )\n    const outTradeInboundData = inboundData.find(\n      (data) => data.chain === outputAsset.chain,\n    )\n\n    const inTradeMimirStatus =\n      haltedChains[inputAsset.L1Chain as SupportedChain]\n    const outTradeMimirStatus =\n      haltedChains[outputAsset.L1Chain as SupportedChain]\n    return (\n      (inTradeInboundData?.halted ?? false) ||\n      (outTradeInboundData?.halted ?? false) ||\n      inTradeMimirStatus ||\n      outTradeMimirStatus\n    )\n  }, [inboundData, haltedChains, inputAsset, outputAsset])\n\n  const { inboundFee, outboundFee, totalFee } = useNetworkFee({\n    inputAsset,\n    outputAsset,\n  })\n\n  const walletConnected = useMemo(\n    () => hasWalletConnected({ wallet, inputAssets: [inputAsset] }),\n    [wallet, inputAsset],\n  )\n\n  const pools = useMemo(\n    () => allPools.filter((data) => data.detail.status === 'available'),\n    [allPools],\n  )\n  const poolAssets = useMemo(() => {\n    const assets = pools.map((pool) => pool.asset)\n    assets.push(Asset.RUNE())\n\n    return assets\n  }, [pools])\n\n  const synthAssets = useMemo(() => {\n    return pools.map((pool) => {\n      const { asset } = pool\n      const synthAsset = new Asset(asset.chain, asset.symbol, true)\n      synthAsset.isSynth = true\n\n      return synthAsset\n    })\n  }, [pools])\n\n  const outputAssets = useMemo(() => {\n    if (IS_SYNTH_ACTIVE) {\n      return [...poolAssets, ...synthAssets]\n    }\n    return poolAssets\n  }, [poolAssets, synthAssets])\n\n  // const inputAssets = useMemo(\n  //   () =>\n  //     hasConnectedWallet(wallet)\n  //       ? getInputAssets({ wallet, pools })\n  //       : outputAssets,\n  //   [wallet, pools, outputAssets],\n  // )\n\n  const [inputAmount, setInputAmount] = useState<Amount>(\n    Amount.fromAssetAmount(0, 8),\n  )\n  const [percent, setPercent] = useState(0)\n  const [chainRecipient, setChainRecipient] = useState('')\n  const [recipient, setRecipient] = useState('')\n  const [visibleConfirmModal, setVisibleConfirmModal] = useState(false)\n  const [visibleApproveModal, setVisibleApproveModal] = useState(false)\n  const affiliateFee = useMemo(\n    () =>\n      !inputAsset.isLTC() && !inputAsset.isBTC()\n        ? inputAmount.mul(AFFILIATE_FEE)\n        : new Amount(0, AmountType.ASSET_AMOUNT, 4),\n    [inputAmount, inputAsset],\n  )\n  const totalFeePlusAffiliate = useMemo(\n    () =>\n      !inputAsset.isLTC() && !inputAsset.isBTC()\n        ? totalFee\n            .add(new AssetAmount(inputAsset, affiliateFee))\n            .totalPriceIn(Asset.USD(), pools)\n        : totalFee,\n    [affiliateFee, inputAsset, pools, totalFee],\n  )\n  const isValidAddress = useMemo(\n    () =>\n      multichain.validateAddress({\n        chain: outputAsset.L1Chain,\n        address: recipient,\n      }),\n    [outputAsset, recipient],\n  )\n\n  const swap: Swap | null = useMemo(() => {\n    if (poolLoading) return null\n\n    try {\n      const inputAssetAmount = new AssetAmount(inputAsset, inputAmount)\n\n      const inboundFeeInInputAsset = new AssetAmount(\n        inputAsset,\n        Amount.fromAssetAmount(\n          inboundFee.totalPriceIn(inputAsset, pools).price,\n          inputAsset.decimal,\n        ),\n      )\n\n      const outboundFeeInOutputAsset = outboundFee\n        ? new AssetAmount(\n            outputAsset,\n            Amount.fromAssetAmount(\n              outboundFee.totalPriceIn(outputAsset, pools).price,\n              outputAsset.decimal,\n            ),\n          )\n        : new AssetAmount(\n            outputAsset,\n            Amount.fromAssetAmount(0, outputAsset.decimal),\n          )\n\n      return new Swap({\n        inputAsset,\n        outputAsset,\n        pools,\n        amount: inputAssetAmount,\n        slip: slippageTolerance,\n        fee: {\n          inboundFee: inboundFeeInInputAsset,\n          outboundFee: outboundFeeInOutputAsset,\n        },\n      })\n    } catch (error) {\n      console.log(error)\n      return null\n    }\n  }, [\n    inputAsset,\n    outputAsset,\n    pools,\n    inputAmount,\n    slippageTolerance,\n    poolLoading,\n    inboundFee,\n    outboundFee,\n  ])\n\n  const outputAmount: Amount = useMemo(() => {\n    if (swap) {\n      return swap.outputAmountAfterFee.amount\n    }\n\n    return Amount.fromAssetAmount(0, 8)\n  }, [swap])\n\n  const slipPercent: Percent = useMemo(\n    () => (swap ? swap.slip : new Percent(0)),\n    [swap],\n  )\n\n  const minReceive: Amount = useMemo(\n    () => (swap ? swap.minOutputAmount : Amount.fromAssetAmount(0, 8)),\n    [swap],\n  )\n\n  const inputAssetPriceInUSD = useMemo(\n    () =>\n      new Price({\n        baseAsset: inputAsset,\n        pools,\n        priceAmount: inputAmount,\n      }),\n    [inputAsset, inputAmount, pools],\n  )\n\n  const outputAssetPriceInUSD = useMemo(\n    () =>\n      new Price({\n        baseAsset: outputAsset,\n        pools,\n        priceAmount: outputAmount,\n      }),\n    [outputAsset, outputAmount, pools],\n  )\n\n  useEffect(() => {\n    if (wallet) {\n      const address = getWalletAddressByChain(wallet, outputAsset.L1Chain)\n      setRecipient(address || '')\n      setChainRecipient(address || '')\n    }\n  }, [wallet, outputAsset])\n\n  const maxInputBalance: Amount = useMemo(() => getMaxBalance(inputAsset), [\n    inputAsset,\n    getMaxBalance,\n  ])\n\n  const inputAssetBalance: Amount = useMemo(() => {\n    if (!wallet) {\n      // allow max amount for emulation if wallet is not connected\n      return Amount.fromAssetAmount(10 ** 3, 8)\n    }\n\n    return getAssetBalance(inputAsset, wallet)\n  }, [inputAsset, wallet])\n\n  const handleSelectInputAsset = useCallback(\n    (input: Asset) => {\n      history.push(getSwapRoute(input, outputAsset))\n    },\n    [history, outputAsset],\n  )\n\n  const handleSelectOutputAsset = useCallback(\n    (output: Asset) => {\n      history.push(getSwapRoute(inputAsset, output))\n    },\n    [history, inputAsset],\n  )\n\n  const handleSwitchPair = useCallback(() => {\n    history.push(getSwapRoute(outputAsset, inputAsset))\n  }, [history, inputAsset, outputAsset])\n\n  const handleChangeInputAmount = useCallback(\n    (amount: Amount) => {\n      if (amount.gt(maxInputBalance)) {\n        setInputAmount(maxInputBalance)\n        setPercent(100)\n      } else {\n        setInputAmount(amount)\n        setPercent(amount.div(maxInputBalance).mul(100).assetAmount.toNumber())\n      }\n    },\n    [maxInputBalance],\n  )\n\n  const handleChangePercent = useCallback(\n    (p: number) => {\n      setPercent(p)\n      const newAmount = maxInputBalance.mul(p).div(100)\n      setInputAmount(newAmount)\n    },\n    [maxInputBalance],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    handleChangePercent(100)\n  }, [handleChangePercent])\n\n  const handleConfirm = useCallback(async () => {\n    setVisibleConfirmModal(false)\n\n    if (wallet && swap) {\n      const trackerType = getSwapTrackerType(swap)\n\n      // register to tx tracker\n      const trackId = submitTransaction({\n        type: trackerType,\n        submitTx: {\n          inAssets: [\n            {\n              asset: swap.inputAsset.toString(),\n              amount: swap.inputAmount.toSignificant(6),\n            },\n          ],\n          outAssets: [\n            {\n              asset: swap.outputAsset.toString(),\n              amount: swap.outputAmountAfterFee.toSignificant(6),\n            },\n          ],\n        },\n      })\n\n      try {\n        const txHash = await multichain.swap(\n          swap,\n          recipient,\n          filteredAffiliates,\n        )\n\n        // start polling\n        pollTransaction({\n          type: trackerType,\n          uuid: trackId,\n          submitTx: {\n            inAssets: [\n              {\n                asset: swap.inputAsset.toString(),\n                amount: swap.inputAmount.toSignificant(6),\n              },\n            ],\n            outAssets: [\n              {\n                asset: swap.outputAsset.toString(),\n                amount: swap.outputAmountAfterFee.toSignificant(6),\n              },\n            ],\n            txID: txHash,\n          },\n        })\n      } catch (error: any) {\n        setTxFailed(trackId)\n\n        // handle better error message\n        const description = translateErrorMsg(error?.toString())\n\n        Notification({\n          type: 'error',\n          message: 'Submit Transaction Failed.',\n          description,\n          duration: 20,\n        })\n        console.log(error)\n      }\n    }\n  }, [\n    wallet,\n    swap,\n    recipient,\n    filteredAffiliates,\n    submitTransaction,\n    pollTransaction,\n    setTxFailed,\n  ])\n\n  const handleCancel = useCallback(() => {\n    setVisibleConfirmModal(false)\n  }, [])\n\n  const handleConfirmApprove = useCallback(async () => {\n    setVisibleApproveModal(false)\n\n    if (wallet) {\n      // register to tx tracker\n      const trackId = submitTransaction({\n        type: TxTrackerType.Approve,\n        submitTx: {\n          inAssets: [\n            {\n              asset: inputAsset.toString(),\n              amount: '0', // not needed for approve tx\n            },\n          ],\n        },\n      })\n\n      try {\n        const txHash = await multichain.approveAsset(inputAsset)\n        console.log('approve txhash', txHash)\n        if (txHash) {\n          // start polling\n          pollTransaction({\n            type: TxTrackerType.Swap,\n            uuid: trackId,\n            submitTx: {\n              inAssets: [\n                {\n                  asset: inputAsset.toString(),\n                  amount: '0', // not needed for approve tx\n                },\n              ],\n              txID: txHash,\n            },\n          })\n        }\n      } catch (error) {\n        setTxFailed(trackId)\n        Notification({\n          type: 'open',\n          message: 'Approve Failed.',\n          duration: 20,\n        })\n        console.log(error)\n      }\n    }\n  }, [inputAsset, wallet, setTxFailed, submitTransaction, pollTransaction])\n\n  const handleSwap = useCallback(() => {\n    if (walletConnected && swap) {\n      if (swap.hasInSufficientFee) {\n        Notification({\n          type: 'info',\n          message: 'Swap Insufficient Fee',\n          description: 'Input amount is not enough to cover the fee',\n        })\n        return\n      }\n\n      if (!isValidAddress) {\n        Notification({\n          type: 'error',\n          message: 'Invalid Recipient Address',\n          description: 'Recipient address should be a valid address.',\n        })\n        return\n      }\n\n      setVisibleConfirmModal(true)\n    } else {\n      Notification({\n        type: 'info',\n        message: 'Wallet Not Found',\n        description: 'Please connect wallet',\n      })\n    }\n  }, [isValidAddress, walletConnected, swap])\n\n  const handleApprove = useCallback(() => {\n    if (walletConnected && swap) {\n      setVisibleApproveModal(true)\n    } else {\n      Notification({\n        type: 'info',\n        message: 'Wallet Not Found',\n        description: 'Please connect wallet',\n      })\n    }\n  }, [walletConnected, swap])\n\n  const isValidSwap = useMemo(() => {\n    if (isTradingHalted && !IS_TESTNET) {\n      return {\n        valid: false,\n        msg: 'Swap not available',\n      }\n    }\n\n    return swap?.isValid() ?? { valid: false }\n  }, [swap, isTradingHalted])\n\n  const isValidSlip = useMemo(() => swap?.isSlipValid() ?? true, [swap])\n\n  const btnLabel = useMemo(() => {\n    if (isValidSwap.valid || inputAmount.eq(0)) {\n      if (!isConnected) {\n        return 'Connect Wallet'\n      }\n      if (inputAsset.isSynth && outputAsset.isSynth) {\n        return 'Buy RUNE'\n      }\n      if (inputAsset.isSynth) {\n        return 'Redeem'\n      }\n      if (outputAsset.isSynth) {\n        return 'Mint'\n      }\n      return 'Buy RUNE'\n    }\n\n    return isValidSwap?.msg ?? 'Buy RUNE'\n  }, [\n    isValidSwap.valid,\n    isValidSwap?.msg,\n    inputAmount,\n    isConnected,\n    inputAsset.isSynth,\n    outputAsset.isSynth,\n  ])\n\n  const renderConfirmModalContent = useMemo(() => {\n    return (\n      <Styled.ConfirmModalContent>\n        <Information\n          title=\"Send\"\n          description={`${inputAmount.toSignificant(\n            6,\n          )} ${inputAsset.name.toUpperCase()}`}\n        />\n        <Information\n          title=\"Recipient\"\n          description={`${outputAmount.toSignificant(\n            6,\n          )} ${outputAsset.name.toUpperCase()}`}\n        />\n        <br />\n        <Information\n          title=\"Recipient Address\"\n          description={truncateAddress(recipient)}\n          error={!isValidAddress}\n        />\n        <br />\n        <Information\n          title=\"Slip\"\n          description={slipPercent.toFixed(3)}\n          error={!isValidSlip}\n          tooltip={SLIP_TOOLTIP_LABEL}\n        />\n        <Information\n          title=\"Min Received\"\n          description={`${minReceive.toSignificant(\n            6,\n          )} ${outputAsset.name.toUpperCase()}`}\n          tooltip={MIN_RECEIVED_LABEL}\n        />\n        <Information\n          title=\"Transaction Fee\"\n          description={inboundFee.toCurrencyFormat()}\n          tooltip={TX_FEE_TOOLTIP_LABEL}\n        />\n        <Information\n          title=\"Affiliate Fee\"\n          description={`${\n            affiliateFee.toSignificant(4) ?? ''\n          } ${inputAsset.name.toUpperCase()}`}\n          tooltip={\n            inputAsset.isBTC() || inputAsset.isLTC()\n              ? 'There is currenly no affiliate fee for BTC or LTC transactions.'\n              : `Transaction fee of ${(AFFILIATE_FEE * 100).toFixed(\n                  0,\n                )}% used to pay affiliates and fund TerraYield.com development.`\n          }\n        />\n        <Information\n          title=\"Network Fee\"\n          description={outboundFee?.toCurrencyFormat() ?? ''}\n          tooltip=\"Thorchain network fee used to pay outbound transaction\"\n        />\n        <Information\n          title=\"Total\"\n          description={totalFeePlusAffiliate.toCurrencyFormat(2) ?? ''}\n          tooltip=\"Sum of both transaction fee and network fee\"\n        />\n      </Styled.ConfirmModalContent>\n    )\n  }, [\n    inputAmount,\n    outputAmount,\n    inputAsset,\n    outputAsset,\n    recipient,\n    slipPercent,\n    isValidSlip,\n    minReceive,\n    inboundFee,\n    outboundFee,\n    // totalFeeInUSD,\n    // estimatedTime,\n    affiliateFee,\n    isValidAddress,\n    totalFeePlusAffiliate,\n  ])\n\n  const renderApproveModal = useMemo(() => {\n    return (\n      <Styled.ConfirmModalContent>\n        <Information\n          title={`Approve ${inputAsset.name.toUpperCase()}`}\n          description=\"\"\n        />\n        <Information\n          title=\"Transaction Fee\"\n          description={inboundFee.toCurrencyFormat()}\n          tooltip={TX_FEE_TOOLTIP_LABEL}\n        />\n      </Styled.ConfirmModalContent>\n    )\n  }, [inboundFee, inputAsset])\n\n  const title = useMemo(\n    () => `Swap ${inputAsset.name} >> ${outputAsset.name}`,\n    [inputAsset, outputAsset],\n  )\n  const poolAsset = useMemo(\n    () => (inputAsset.isRUNE() ? outputAsset : inputAsset),\n    [inputAsset, outputAsset],\n  )\n  // const showApp = false\n  return (\n    <PanelView meta={title} poolAsset={poolAsset} type=\"swap\">\n      <FromCard>\n        <AssetInputCard\n          title=\"from\"\n          asset={inputAsset}\n          assets={outputAssets}\n          amount={inputAmount}\n          balance={inputAssetBalance}\n          onChange={handleChangeInputAmount}\n          onSelect={handleSelectInputAsset}\n          onMax={handleSelectMax}\n          usdPrice={inputAssetPriceInUSD}\n          wallet={wallet || undefined}\n        />\n        <StyledSliderWrapper>\n          <Slider value={percent} onChange={handleChangePercent} withLabel />\n        </StyledSliderWrapper>\n      </FromCard>\n      <Styled.ToolContainer>\n        <Styled.SwitchPair>\n          <IconButton onClick={handleSwitchPair}>\n            {/* <SwapOutlined /> */}\n          </IconButton>\n        </Styled.SwitchPair>\n      </Styled.ToolContainer>\n      <ToCard>\n        <AssetInputCard\n          title=\"to\"\n          asset={outputAsset}\n          assets={outputAssets}\n          amount={outputAmount}\n          onSelect={handleSelectOutputAsset}\n          inputProps={{ disabled: true }}\n          usdPrice={outputAssetPriceInUSD}\n          wallet={wallet || undefined}\n        />\n        <Styled.RecipientAddrWrapper>\n          <AddressSelectCard\n            title=\"address\"\n            address={recipient}\n            chain={outputAsset.L1Chain}\n            chainAddr={chainRecipient}\n            onAddressChange={setRecipient}\n          />\n        </Styled.RecipientAddrWrapper>\n      </ToCard>\n      <Styled.SwapInfo>\n        {/* <PriceRate\n          price={swap?.price}\n          inputAsset={swap?.inputAsset}\n          outputAsset={swap?.outputAsset}\n        />\n        <Information\n          title=\"Slip\"\n          description={slipPercent.toFixed(3)}\n          error={!isValidSlip}\n          tooltip={SLIP_TOOLTIP_LABEL}\n        />\n        <Information\n          title=\"Min Received\"\n          description={`${minReceive.toSignificant(\n            6,\n          )} ${outputAsset.name.toUpperCase()}`}\n          tooltip={MIN_RECEIVED_LABEL}\n        />\n\n        <br />\n        <Information\n          title=\"Transaction Fee\"\n          description={inboundFee.toCurrencyFormat()}\n          tooltip={TX_FEE_TOOLTIP_LABEL}\n        />\n        <Information\n          title=\"Network Fee\"\n          description={outboundFee?.toCurrencyFormat() ?? ''}\n          tooltip=\"Estimated network fee used to pay outbound transaction\"\n        /> */}\n        <Information\n          title=\"Total Fee\"\n          description={totalFeePlusAffiliate?.toCurrencyFormat(2) ?? ''}\n          tooltip=\"Sum of both transaction fee and network fee\"\n        />\n      </Styled.SwapInfo>\n      {isApproved !== null && wallet && (\n        <Styled.ConfirmButtonContainer>\n          {!isApproved && (\n            <Styled.ApproveBtn\n              onClick={handleApprove}\n              error={!isValidSwap.valid}\n              disabled={\n                assetApproveStatus === TxTrackerStatus.Pending ||\n                assetApproveStatus === TxTrackerStatus.Submitting\n              }\n              loading={\n                assetApproveStatus === TxTrackerStatus.Pending ||\n                assetApproveStatus === TxTrackerStatus.Submitting\n              }\n            >\n              Approve\n            </Styled.ApproveBtn>\n          )}\n          {walletConnected ? (\n            <FancyButton\n              disabled={!isApproved}\n              onClick={handleSwap}\n              error={!isValidSwap.valid}\n            >\n              {btnLabel}\n            </FancyButton>\n          ) : (\n            <FancyButton onClick={handleClickWalletBtn}>{btnLabel}</FancyButton>\n          )}\n        </Styled.ConfirmButtonContainer>\n      )}\n      {!wallet && (\n        <Styled.ConfirmButtonContainer>\n          <FancyButton onClick={handleSwap} error={!isValidSwap.valid}>\n            {btnLabel}\n          </FancyButton>\n        </Styled.ConfirmButtonContainer>\n      )}\n      <ConfirmModal\n        visible={visibleConfirmModal}\n        onOk={handleConfirm}\n        onCancel={handleCancel}\n        inputAssets={[inputAsset]}\n      >\n        {renderConfirmModalContent}\n      </ConfirmModal>\n      <ConfirmModal\n        visible={visibleApproveModal}\n        onOk={handleConfirmApprove}\n        onCancel={() => setVisibleApproveModal(false)}\n        inputAssets={[inputAsset]}\n      >\n        {renderApproveModal}\n      </ConfirmModal>\n    </PanelView>\n  )\n}\n\nexport default SwapView\n","import { useEffect, useState, useMemo } from 'react'\n\nimport { Asset, hasConnectedWallet } from 'multichain-sdk'\n\nimport { useMidgard } from 'redux/midgard/hooks'\nimport { TxTrackerStatus } from 'redux/midgard/types'\nimport { useWallet } from 'redux/wallet/hooks'\n\nimport { multichain } from 'services/multichain'\n\nexport const useApprove = (asset: Asset, hasWallet = true) => {\n  const { approveStatus } = useMidgard()\n  const { wallet } = useWallet()\n  const [isApproved, setApproved] = useState<boolean | null>(\n    hasWallet ? null : true,\n  )\n\n  const isWalletConnected = useMemo(() => hasConnectedWallet(wallet), [wallet])\n\n  useEffect(() => {\n    if (!hasWallet || !isWalletConnected) {\n      setApproved(true)\n      return\n    }\n\n    const checkApproved = async () => {\n      if (approveStatus?.[asset.toString()] === TxTrackerStatus.Success) {\n        setApproved(true)\n      }\n      const approved = await multichain.isAssetApproved(asset)\n      setApproved(approved)\n    }\n\n    checkApproved()\n  }, [asset, approveStatus, hasWallet, isWalletConnected])\n\n  const assetApproveStatus = useMemo(() => approveStatus?.[asset.toString()], [\n    approveStatus,\n    asset,\n  ])\n\n  return {\n    assetApproveStatus,\n    isApproved,\n  }\n}\n","const ORIGIN_UTXO_ERROR_MSG = 'No utxos to send'\nconst PROCESSED_UTXO_ERROR_MSG =\n  'Please wait a bit until UTXOs are confirmed and Try again.'\n\nexport const translateErrorMsg = (msg: string) => {\n  if (msg.includes(ORIGIN_UTXO_ERROR_MSG)) {\n    return PROCESSED_UTXO_ERROR_MSG\n  }\n\n  return msg\n}\n","import Swap from './Swap'\n\nexport default Swap\n"],"sourceRoot":""}